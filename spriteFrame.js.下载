(function ( require ) {
	// require路径配置
	var requireConfig = {
		urlArgs: "r=" + (typeof APP_VERSION != "undefined"?APP_VERSION:APP_CONFIG.APP_VERSION),
		paths : {
			jquery 			: SERVER_PATH + '/bower_components/jquery/dist/jquery.min',
			vue 			: SERVER_PATH + '/bower_components/vue2/vue.min',
			vueRouter 		: SERVER_PATH + '/bower_components/vue2/vue-router.min',
			iview 			: SERVER_PATH + '/fe_components/iview2/iview.min',
			text 			: SERVER_PATH + '/bower_components/text/text',
			util 			: 'public/util/util',
			MINT 			: SERVER_PATH + '/fe_components/mobile/MINT/index',
			TGUI 			: SERVER_PATH + '/fe_components/mobile/tg-ui/index',
			'emap-h5tag' 	: SERVER_PATH + '/fe_components/mobile/tg-ui/emap-h5tag.min',
			axios 			: SERVER_PATH + '/bower_components/vue2/axios.min',
			'emap-mobile' 	: SERVER_PATH + '/fe_components/mobile/emap-mobile.min',
			BH_MOBILE 		: SERVER_PATH + '/fe_components/mobile/BH_MIXIN_SDK',
			// WEIXIN: 'https://res.wx.qq.com/open/js/jweixin-1.2.0',
			selectRoleIndex : '../../itpub/public/mob/component/selectrole/selectrole',
			home 			: '../../itpub/public/mob/component/home/home',
			nopermission 	: '../../itpub/public/mob/component/nopermission/nopermission',
			spriteUtils 	: '../../itpub/public/mob/js/spriteUtil',
			publicVueComponent : '../../itpub/public/mob/component',
			'draggable' 	: SERVER_PATH + "/bower_components/vuedraggable/vuedraggable",
			'sortable' 		: SERVER_PATH + "/bower_components/sortable/1.5.1/Sortable.min",
			// qrcode: SERVER_PATH + '/bower_components/qrcode.js/qrcode.js',
			// bhFillStyle: SERVER_PATH +
			// '/fe_components/mobile/bh_utils_mobile',
			emapMin 		: '../../itpub/public/mob/js/emapMin',
			pagelog 		: SERVER_PATH + '/fe_components/sentry/sentry.min',
			cropper 		: SERVER_PATH + '/bower_components/cropper/cropper.min',
			custom_lw 		: '../../itpub/public/js/custom_lw',
			bh_utils:SERVER_PATH +"/fe_components/bh_utils",
			moment:SERVER_PATH +"/fe_components/bhtc/moment/min/moment-with-locales.min",
			bh:SERVER_PATH +"/fe_components/bh-1.2.min",
			emap1_2:SERVER_PATH +"/fe_components/emap-1.2",
			qs	 			: contextPath + '/sys/itpub/public/mob/newframe/lib/qs',
			httpUtils	 	: contextPath + '/sys/itpub/public/mob/newframe/httpUtils',
			
		},
		shim : {
			// 'qrcode': {
			// exports: 'QRCode'
			// },
			// 'bhFillStyle': {
			// exports: 'bhFillStyle'
			// },
	        vue: {
	            exports : 'Vue'
	        },
			'emap-mobile' : {
				deps : [ 'jquery' ],
			},
			'bh_utils' : {
				deps : [ 'jquery' ],
			},
			'moment' : {
				deps : [ 'bh_utils' ]
			},
			'bh' : {
				deps : [ 'moment' ]
			},
			'emap1_2' : {
				deps : [ 'bh' ]
			},
			'emapMin' : {
				deps : [ 'emap1_2' ],
			},
			'pagelog' : {
				deps : [ 'jquery' ]
			},
			'custom_lw' : {
				deps : [ 'jquery' ]
			},
			iview : [
				'vue'
			]
		},
		waitSeconds : 0

	};

	/**
	 * appLoadAsync用于控制app页面的加载方式 true: app的所有页面为异步加载，只在使用到时加载 false:
	 * app的所有页面在应用初始化时一次性加载
	 */
	window.appLoadAsync = false;

	// 默认的组件库和公共方法以及公共页面
	var requir_default_arr = [ 'jquery', 
	                           'vue', 
	                           'vueRouter', 
	                           'MINT', 
	                           'TGUI', 
	                           'emap-h5tag', 
	                           'emap-mobile', 
	                           'axios', 
	                           'spriteUtils', 
	                           'httpUtils', 
	                           'draggable', 
	                           'emapMin', 
	                           'moment', 
	                           'bh', 
	                           'emap1_2', 
	                           'pagelog', 
	                           'cropper',
	                           'iview',
	                           'custom_lw'];

	// 封装的公共vue组件
	var default_component_arr = [ {
		name : 'auditProcess',
		jsPath : 'publicVueComponent/auditprocess/auditProcess'
	}, {
		name : 'noneDatas',
		jsPath : 'publicVueComponent/nonedatas/nonedatas'
	}, {
		name : 'emapFlowView',
		jsPath : 'publicVueComponent/emapflowview/emapflowview'
	} , {
		name : 'rateCouple',
		jsPath : 'publicVueComponent/rateCouple/rateCouple'
	}, {
		name : 'multiModel',
		jsPath : 'publicVueComponent/multimodel/multimodel'
	}, {
		name : 'choosePerson',
		jsPath : 'publicVueComponent/chooseperson/chooseperson'
	}, {
		name : 'baseSelectedFooter',
		jsPath : 'publicVueComponent/baseSelectFooter/baseSelectFooter'
	}, {
		name : 'bsTransitionPage',
		jsPath : 'publicVueComponent/bsTransitionPage/bsTransitionPage'
	}, {
		name : 'baseSelect',
		jsPath : 'publicVueComponent/baseSelect/baseSelect'
	}];

	/**
	 * 用于保存所有模块的全局对象：
	 * <p> defaultModules：默认的组件库和公共方法以及公共页面
	 * <p> pageModules：当前应用的所有页面模块
	 * <p> defaultComponents：封装的公共vue组件
	 */
	window.REQUIRE_MODULES_ARR = {
		defaultModules : requir_default_arr,
		pageModules : [],
		defaultComponents : default_component_arr
	};

	// 配置require
	require.config( requireConfig );

	// 加载框架所需的库和公共页面
	require( requir_default_arr, function ( $, Vue, VueRouter, mintUI, Tg, emap_h5tag, EMAP_MOBILE, axios, sprite, httpUtils, draggable, emapMin, moment, bh, emap1_2, pagelog, cropper, iview, custom_lw ) {

		// 设置拖拽组件
		Vue.component( 'draggable', draggable );

		// 将各个组件库输出到全局作用域
		window.axios = axios;
		window.Vue = Vue;
		window.VueRouter = VueRouter;
		window.mintUI = mintUI;
		window.Tg = Tg;
		window.emap_h5tag = emap_h5tag;
		window.EMAP_MOBILE = EMAP_MOBILE;
		window.WIS_EMAP_SERV = $.extend(window.WIS_EMAP_SERV,emapMin);
		window.sprite = sprite;
		window.httpUtils = httpUtils;

		//国际化支持
		function getLangResource() {
			var paths = location.pathname.split('/');
			var appName = paths[paths.indexOf('sys') + 1];
			var ctx = paths[1];
			var uri = '/' + ctx + '/i18n.do';
			var lang = BH_UTILS.lang.apply(BH_UTILS);
			return $.get(uri, {
				appName : appName,
				EMAP_LANG : lang
			}, 'GET').done(function(resp) {
				if (resp.code === '0' && resp.datas) {
					$.i18n().load(resp.datas, lang);
					$.i18n({
						locale : lang
					});
				}
			});
		}
		;
		if (window.APP_CONFIG.hasOwnProperty('USE_LANG')) {
			getLangResource();
		} else {
			BH_UTILS.lang.apply(BH_UTILS);
		}
		
		$.each( emap_h5tag['default'], function ( i, item ) {
			Vue.component( i, item );
		} );

		$.each( Tg['default'], function ( i, item ) {
			Vue.component( item['name'], item );
		} );
		$.extend({
			/**
			 * 获取当前日期，格式为YYYY-MM-DD
			 * 
			 */
			newServerDate : function() {
				var result = null;
				$.ajax({
					url : contextPath + "/sys/itpub/api/getServerTime.do",
					type : 'POST',
					async : false,
					success : function(resp) {
						result = resp;
					},
					dataType : "JSON"
				});
				var date = new Date(result.date);
				var seperator1 = "-";
				var year = date.getFullYear();
				var month = date.getMonth() + 1;
				var strDate = date.getDate();
				if (month >= 1 && month <= 9) {
					month = "0" + month;
				}
				if (strDate >= 0 && strDate <= 9) {
					strDate = "0" + strDate;
				}
				var currentdate = year + seperator1 + month + seperator1 + strDate;
				return currentdate;
			},
			/**
			 * 获取当前时间，格式为YYYY-MM-DD hh24:mm:ss
			 * 
			 */
			newServerDateTime : function() {
				var result = null;
				$.ajax({
					url : contextPath + "/sys/itpub/api/getServerTime.do",
					type : 'POST',
					async : false,
					success : function(resp) {
						result = resp;
					},
					dataType : "JSON"
				});
				var date = new Date(result.date);
				var seperator1 = "-";
				var year = date.getFullYear();
				var month = date.getMonth() + 1;
				var strDate = date.getDate();
				var strDate = date.getDate();
				var hours = date.getHours();
				var minutes = date.getMinutes();
				var seconds = date.getSeconds();
				if (month >= 1 && month <= 9) {
					month = "0" + month;
				}
				if (strDate >= 0 && strDate <= 9) {
					strDate = "0" + strDate;
				}
				if (hours >= 0 && hours <= 9) {
					hours = "0" + hours;
				}
				if (minutes >= 0 && minutes <= 9) {
					minutes = "0" + minutes;
				}
				if (seconds >= 0 && seconds <= 9) {
					seconds = "0" + seconds;
				}
				var currentdate = year + seperator1 + month + seperator1 + strDate + " " + hours + ":" + minutes + ":" + seconds;
				return currentdate;
			},

			/**
			 * 根据流程和taskid获取节点配置
			 * 
			 * @param {defKey, taskId}
			 * 
			 */
			getRenderFlowComponentParamsInForm : function(param) {
				var result = null;
				$.ajax({
					url : contextPath + "/sys/itpub/common/api/flow/getRenderFlowComponentParamsInForm.do",
					type : 'POST',
					async : false,
					data : param,
					success : function(resp) {
						result = resp;
					},
					dataType : "JSON"
				});
				return result;
			}
		});
		// vue路由组件
		Vue.use( VueRouter );
		// 饿了么移动端组件mint-ui
		Vue.use( mintUI );
		Vue.use( Tg );
		Vue.use( emap_h5tag );
		// EMAP相关vue组件
		Vue.use( EMAP_MOBILE );
		Vue.use( iview );
		
		if(sprite.getQueryString ( 'GROUPID' )){
			roleId = sprite.getQueryString ( 'GROUPID' );
		}
		// ids认证
		if ( userId != null && userId != undefined ) {
			// 如果是任务中心过来的请求，将不做角色的选择
			if ( sprite.isTaskCenterRequest () ) {
				sprite.getAuthConfig().then( sprite.initApp );
			} else {
				// 获取角色配置相关参数 --> 获取用户授权功能 --> 初始化应用
				sprite.getSelRoleConfig().then( sprite.getAuthConfig ).then( sprite.initApp );
			}
		}
		// 游客
		else {
			// 初始化应用--游客模式
			sprite.initApp_visitor();
		}

	} );

}( require ));